import sys

num_t = int(sys.stdin.readline())

DEBUG = False
def log(message):
    if DEBUG:
        print(message)

def solve(num_n):
    dp = [[0 for _ in range(num_n+1)] for _ in range(num_n+1)]

    for i in range(2, num_n+1):
        for j in range(1, num_n+2-i):
            dp[j][j+i-1] = min([dp[j][j+k] + dp[j+k+1][j+i-1] for k in range(i-1)]) + (sum_arr[j+i-1] - sum_arr[j-1])

    sys.stdout.write(f"{dp[1][num_n]}\n")

    # for i in range(2, num_n+1):
    #     for j in range(1, num_n-i+2):
    #         dp[j][j+i-1] = min([dp[j][j+k] + dp[j+k+1][j+i-1]])

for _ in range(num_t):
    num_n = int(sys.stdin.readline())
    arr = [0] + list(map(int, sys.stdin.readline().rstrip().split()))
    sum_arr = [0 for _ in range(num_n+1)]
    for i in range(1, num_n+1):
        sum_arr[i] = sum(arr[1:i+1])
    # for i in range(1, num_n+1):
    #     sum_arr[i] = sum_arr[i-1] + arr[i]
    log(sum_arr)
    solve(num_n)

    # dp = [[0 for _ in range(num_n + 1)] for _ in range(num_n + 1)]
    #
    # for i in range(2, num_n + 1):
    #     for j in range(1, num_n + 2 - i):
    #         dp[j][j + i - 1] = min([dp[j][j + k] + dp[j + k + 1][j + i - 1] for k in range(i - 1)]) + (
    #                     sum_arr[j + i - 1] - sum_arr[j - 1])
    #
    # sys.stdout.write(f"{dp[1][num_n]}")






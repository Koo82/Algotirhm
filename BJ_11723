import sys

DEBUG = False
def log(message):
    if DEBUG:
        print(message)

num = int(sys.stdin.readline())

class bitmask:
    def __init__(self):
        self.s = 0

    def add(self, x):
        self.s = self.s | 1 << x

    def remove(self, x):
        self.s = self.s & ~(1 << x)

    def check(self, x):
        if self.s & (1 << x):
            sys.stdout.write("1\n")
        else:
            sys.stdout.write("0\n")

    def toggle(self, x):
        self.s = self.s ^ (1 << x)

    def all(self):
        self.empty()
        for i in range(1, 21):
            self.add(i)
        # print("Ha" + self.s)

    def empty(self):
        self.s = 0

test = bitmask()

for i in range(num):
    func = sys.stdin.readline().rstrip()
    log(func)
    if not ("all" in func or "empty" in func):
        func, x = func.split()
    if func == 'add':
        test.add(int(x))
    elif func == 'remove':
        test.remove(int(x))
    elif func == 'check':
        test.check(int(x))
    elif func == 'toggle':
        test.toggle(int(x))
    elif func == 'all':
        test.all()
    elif func == 'empty':
        test.empty()

